{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "InceptionPad Message Service",
  "Parameters": {
    "LambdaCodeS3BucketName": {
      "Description": "Name of S3 bucket for Lambda codes.",
      "Type": "String"
    },
    "DeliveryStreamS3BucketName": {
      "Description": "Name of the bucket using to store Kinesis delivery stream.",
      "Type": "String",
      "Default": "dev-inceptionpad-message-service-deliverystream-bucket",
      "AllowedValues": [
        "dev-inceptionpad-message-service-deliverystream-bucket",
        "qa-inceptionpad-message-service-deliverystream-bucket",
        "prod-inceptionpad-message-service-deliverystream-bucket"
      ]
    },
    "DeliveryStreamS3Prefix": {
      "Description": "Name of the bucket using to store Kinesis delivery stream.",
      "Type": "String",
      "Default": "pinpoint-events/"
    },
    "PinpointEventProcessorLambdaName": {
      "Description": "Name of the pinpoint events processor Lambda.",
      "Type": "String",
      "Default": "dev-inceptionpad-message-service-pinpoint-event-processor",
      "AllowedValues": [
        "dev-inceptionpad-message-service-pinpoint-event-processor",
        "qa-inceptionpad-message-service-pinpoint-event-processor",
        "prod-inceptionpad-message-service-pinpoint-event-processor"
      ]
    },
    "PinpointEventProcessorLambdaCodeArchiveName": {
      "Description": "File name of the alarm Lambda code zip. Example: code-event-processor.zip",
      "Type": "String"
    }
  },
  "Resources": {
    "DeliveryStreamS3": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {"Ref": "DeliveryStreamS3BucketName"},
        "NotificationConfiguration": {
          "EventBridgeConfiguration": {
            "EventBridgeEnabled": true
          }
        }
      }
    },
    "S3EventLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Ref": "LambdaCodeS3BucketName"},
          "S3Key": {"Ref": "PinpointEventProcessorLambdaCodeArchiveName"}
        },
        "Description": "It processes the pinpoint events from the Kinesis Firehose.",
        "FunctionName": {"Ref": "PinpointEventProcessorLambdaName"},
        "Handler": "index.handler",
        "MemorySize": 128,
        "PackageType": "Zip",
        "ReservedConcurrentExecutions": 100,
        "Role": {"Fn::GetAtt": ["S3EventLambdaFunctionRole", "Arn"]},
        "Runtime": "nodejs22.x",
        "Timeout": 60
      },
      "DependsOn": ["S3EventLambdaFunctionRole"]
    },
    "S3EventLambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {"Service": "lambda.amazonaws.com"},
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Description": "It has some logs/s3 permissions",
        "ManagedPolicyArns": ["arn:aws-cn:iam::aws:policy/AWSLambdaExecute"]
      }
    },
    "EventBridgeRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "It collects DeliveryStreamS3 events to trigger EventsProcessorLambda.",
        "EventPattern": {
          "source": ["aws.s3"],
          "detail-type": ["Object Created"],
          "detail": {
            "bucket": {
              "name": [{"Ref": "DeliveryStreamS3BucketName"}]
            },
            "object": {
              "key": [{"prefix": {"Ref": "DeliveryStreamS3Prefix"}}]
            }
          }
        },
        "RoleArn": {"Fn::GetAtt": ["EventBridgeRuleRole", "Arn"]},
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {"Fn::GetAtt": ["S3EventLambdaFunction", "Arn"]},
            "Id": "TargetFunctionV1"
          }
        ]
      },
      "DependsOn": [
        "EventBridgeRuleRole",
        "DeliveryStreamS3",
        "S3EventLambdaFunction"
      ]
    },
    "EventBridgeRuleRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["events.amazonaws.com"]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Description": "It has some logs/s3 permissions",
        "Policies": [
          {
            "PolicyName": "dev-inceptionpad-message-service-eventrule-role",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["lambda:InvokeFunction"],
                  "Resource": [{"Fn::GetAtt": ["DeliveryStreamS3", "Arn"]}]
                }
              ]
            }
          }
        ]
      }
    }
  }
}
